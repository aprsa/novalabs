[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "novalabs-hub"
version = "0.1.0"
description = "Central hub for Villanova astronomy lab ecosystem - authentication, course management, and lab progression tracking"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "AGPL-3.0-only"}
authors = [
    {name = "Andrej Prsa", email = "aprsa@villanova.edu"},
]
maintainers = [
    {name = "Andrej Prsa", email = "aprsa@villanova.edu"},
]
keywords = [
    "astronomy",
    "education",
    "lab-management",
    "fastapi",
    "learning-management",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "Topic :: Education",
    "Topic :: Scientific/Engineering :: Astronomy",
    "License :: OSI Approved :: GNU Affero General Public License v3 (AGPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlmodel>=0.0.14",
    "python-jose[cryptography]>=3.3.0",
    "bcrypt>4.0.0",
    "python-multipart>=0.0.6",
    "requests>=2.31.0",
    "toml>=0.10.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
]
ui = [
    "streamlit>=1.28.0",
]
all = [
    "novalabs-hub[dev,ui]",
]

[project.urls]
Homepage = "https://github.com/aprsa/novalabs"
Repository = "https://github.com/aprsa/novalabs"
Documentation = "https://github.com/aprsa/novalabs/blob/main/README.md"
"Bug Tracker" = "https://github.com/aprsa/novalabs/issues"

[project.scripts]
novalabs-hub = "hub.main:main"
novalabs-seed = "hub.seed_labs:main"
novalabs-admin = "hub.create_admin:main"

[tool.setuptools]
packages = ["hub", "hub.routes", "hub.services", "hub.dashboards", "client", "ui"]

[tool.setuptools.package-data]
hub = ["config.toml", "data/.gitkeep"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["hub", "client"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 120
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py
"tests/*" = ["B011"]  # assert False

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sqlmodel.*",
    "passlib.*",
    "jose.*",
]
ignore_missing_imports = true

